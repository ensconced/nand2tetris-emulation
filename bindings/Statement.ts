// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Expression } from "./Expression";
import type { SubroutineCall } from "./SubroutineCall";

export type Statement = { Let: { var_name: string, array_index: [Expression, number] | null, value: [Expression, number], } } | { If: { condition: [Expression, number], if_statements: Array<[Statement, number]>, else_statements: Array<[Statement, number]> | null, } } | { While: { condition: [Expression, number], statements: Array<[Statement, number]>, } } | { Do: [SubroutineCall, number] } | { Return: [Expression, number] | null };