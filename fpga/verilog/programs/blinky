IF LED IS ON, JUMP TO 8

0100 0000 0000 0000 // load 16384 into A | 0
1111 110000 010 000 // load M[A] into D | 1
0000 0000 0000 1000 // load 8 into A | 2
1110 001100 000 001 // jump if D is positive | 3

TURN LED ON

0100 0000 0000 0000 // load 16384 into A | 4
1110 111111 001 000 // load 1 into M[A] | 5

JUMP TO 10
0000 0000 0000 1010 | 6
1110 101010 000 111 | 7

TURN LED OFF

0100 0000 0000 0000 // load 16384 into A | 8
1110 101010 001 000 // load 0 into M[A] | 9

--------------------------------------------

WAIT ONE SECOND

// M[2] = 0
0000 0000 0000 0010 // load 2 into A | 10
1110 101010 001 000 // load 0 into M[A] | 11

// M[2]++
0000 0000 0000 0010 // load 2 into A | 12
1111 110111 001 000 // load M[A] + 1 into M[A] | 13

// M[1] = 0
0000 0000 0000 0001 // load 1 into A | 14
1110 101010 001 000 // load 0 into M[A] | 15

// M[1]++
0000 0000 0000 0001 // load 1 into A | 16
1111 110111 001 000 // load M[A] + 1 into M[A] | 17

// if M[1] - 300 < 0, jump to 16
0000 0000 0000 0001 // load 1 into A | 18
1111 110000 010 000 // load M[1] into D | 19
0100 0000 0000 0000 // load 16384 into A | 20
1110 010011 010 000 // load D - A into D | 21
0000 0000 0001 0000 // load 16 into A | 22
1110 001100 000 100 // if D < 0, jump | 23

// if M[2] - 32767 < 0, jump to 12
0000 0000 0000 0010 // load 2 into A | 24
1111 110000 010 000 // load M[2] into D | 25
0000 0001 0000 0000 // load 1024 into A | 26
1110 010011 010 000 // load D - A into D | 27
0000 0000 0000 1100 // load 12 into A | 28
1110 001100 000 100 // if D < 0, jump | 29

BACK TO THE START
0000 0000 0000 0000 | 30
1110 101010 000 111 | 31