// GAME OF LIFE

// mash the keyboard to provide random initialisation

// static 0 is timer
// static 1 is prevkey
// static 2 is screen pointer
// static 3 is key_update_pointer

function Sys.init 0
  // initialize timer
  push constant 0
  pop static 0

  // initialize key_update_pointer
  push constant 2048
  pop static 3

  push constant 2048
  pop pointer 0
  push constant 2
  pop this 0
  push constant 1
  pop this 2
  push constant 7
  pop this 4


  label start
    call increment_timer 0
    pop constant 0 // discard return value
    call handle_frame 0
    pop constant 0

    call key_changed 0
    if-goto call_handle_key_change
    goto start

    label call_handle_key_change
    call handle_key_change 0
    pop constant 0
    goto start

function handle_key_change 0
  call update_compact_representation 0
  pop constant 0

  push static 3
  push constant 1
  add
  pop static 3

  push static 3
  push constant 2080
  eq
  if-goto reset_key_update_pointer
  goto call_draw_from_compact_representation
  label reset_key_update_pointer
  push constant 2048
  pop static 3

  label call_draw_from_compact_representation
  call draw_from_compact_representation 0
  return

function update_compact_representation 0
  // set THIS
  push static 3
  pop pointer 0

  push static 0 // timer value
  pop this 0

  push constant 0
  return

function draw_from_compact_representation 1
  push constant 16384
  push constant 15
  add
  pop static 2

  push constant 2048
  pop local 0 // base of row within compact representation

  label start_loop
    push local 0
    push constant 2080
    eq
    if-goto end_loop

    push local 0
    call draw_row_from_compact_representation 1
    pop constant 0

    push static 2
    push constant 512
    add
    pop static 2

    push local 0
    push constant 2
    add
    pop local 0

    goto start_loop
    label end_loop

  push constant 0
  return

function draw_row_from_compact_representation 1
  push static 2
  pop local 0

  push argument 0
  call draw_half_row 1
  pop constant 0

  push static 2
  push constant 16
  add
  pop static 2

  push argument 0
  push constant 1
  add
  call draw_half_row 1
  pop constant 0

  // rewind screen pointer
  push local 0
  pop static 2

  push constant 0
  return

function draw_half_row 2
  push static 2
  pop local 1

  push argument 0
  pop pointer 0

  push constant 1
  pop local 0 // mask

  label start_loop
    push local 0
    push constant 0
    eq
    if-goto end_loop

    push this 0
    push local 0
    and
    push local 0
    eq
    call draw_square 1
    pop constant 0

    push static 2
    push constant 1
    sub
    pop static 2

    push local 0
    push local 0
    add
    pop local 0

    goto start_loop
    label end_loop

  // rewind screen pointer
  push local 1
  pop static 2

  push constant 0
  return

// draw square, without moving screen pointer
function draw_square 1
  push static 2
  pop pointer 0

  push constant 0
  pop local 0
  label start_loop
    push local 0
    push constant 16
    eq
    if-goto end_loop

    push argument 0
    pop this 0

    push pointer 0
    push constant 32
    add
    pop pointer 0

    push local 0
    push constant 1
    add
    pop local 0

    goto start_loop
    label end_loop

  push constant 0
  return

function key_changed 1
  // local 0 is currentkey

  // get currentkey
  push constant 24576
  pop pointer 1
  push that 0
  pop local 0

  push static 1
  push local 0
  eq
  not
  if-goto did_change
  goto did_not_change

  label did_change
  push local 0
  pop static 1
  // return true
  push constant 0
  not
  return

  label did_not_change
  // return false
  push constant 0
  return

function increment_timer 0
  push static 0
  push constant 1
  add
  pop static 0

  push constant 0
  return

function copy_next_buffer 0
  push constant 2048
  pop pointer 0

  push constant 2080
  pop pointer 1

  label start_loop
    push pointer 0
    push constant 2080
    eq
    if-goto end_loop

    push that 0
    pop this 0

    push pointer 0
    push constant 1
    add
    pop pointer 0

    push pointer 1
    push constant 1
    add
    pop pointer 1

    goto start_loop
    label end_loop

  push constant 0
  return

function left 0
  push argument 1 // bitidx
  push constant 15
  eq
  if-goto call_handle_left_edgecase

  push argument 0 // wordidx
  pop temp 0

  push argument 1 // bitidx
  push constant 1
  add
  pop temp 1

  push constant 0
  return

  label call_handle_left_edgecase
  push argument 0
  push argument 1
  call left_edgecase 2
  return

function left_edgecase 0
  push constant 0
  pop temp 1

  push argument 0 // wordidx
  call is_even 1
  if-goto handle_even_wordidx
  push argument 0
  push constant 1
  sub
  pop temp 0

  push constant 0
  return

  label handle_even_wordidx
  push argument 0
  push constant 1
  add
  pop this 0

  push constant 0
  return

function right 0
  push argument 1 // bitidx
  push constant 0
  eq
  if-goto handle_right_edgecase
  push argument 0
  pop temp 0

  push argument 1
  push constant 1
  sub
  pop temp 1

  push constant 0
  return

  label handle_right_edgecase
  push argument 0
  push argument 1
  call right_edgecase 2
  return

function right_edgecase 0
  push constant 15
  pop temp 1

  push argument 0 // wordidx
  call is_even 1
  if-goto handle_even_wordidx

  push argument 0
  push constant 1
  sub
  pop temp 0

  push constant 0
  return

  label handle_even_wordidx
  push argument 0
  push constant 1
  add
  pop temp 0

  push constant 0
  return

function up 0
  push argument 0
  push constant 30
  add
  push constant 31
  and
  pop temp 0

  push argument 1
  pop temp 1

  push constant 0
  return

function down 0
  push argument 0
  push constant 2
  add
  push constant 31
  and
  pop temp 0

  push argument 1
  pop temp 1

  push constant 0
  return

function read_value 2
  // generate mask
  push constant 1
  pop local 0 // mask

  push constant 0
  pop local 1 // counter
  label start_loop
    push argument 1 // bitidx
    push local 1
    eq
    if-goto end_loop

    push local 0
    push local 0
    add
    pop local 0

    push local 1
    push constant 1
    add
    pop local 1

    goto start_loop
    label end_loop

  push constant 2048
  push argument 0
  add
  pop pointer 0
  push this 0 // value
  push local 0 // mask
  and
  push local 0
  eq
  return

function is_even 0
  push argument 0
  push constant 1
  and
  push constant 1
  eq
  not
  return

