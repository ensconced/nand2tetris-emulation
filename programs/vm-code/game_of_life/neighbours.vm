function left 0
  push argument 1 // bitidx
  push constant 15
  eq
  if-goto call_handle_left_edgecase

  push argument 0 // wordidx
  pop temp 0

  push argument 1 // bitidx
  push constant 1
  add
  pop temp 1

  push constant 0
  return

  label call_handle_left_edgecase
  push argument 0
  push argument 1
  call left_edgecase 2
  return

function left_edgecase 0
  push constant 0
  pop temp 1

  push argument 0 // wordidx
  call is_even 1
  if-goto handle_even_wordidx
  push argument 0
  push constant 1
  sub
  pop temp 0

  push constant 0
  return

  label handle_even_wordidx
  push argument 0
  push constant 1
  add
  pop temp 0

  push constant 0
  return

function right 0
  push argument 1 // bitidx
  push constant 0
  eq
  if-goto handle_right_edgecase
  push argument 0
  pop temp 0

  push argument 1
  push constant 1
  sub
  pop temp 1

  push constant 0
  return

  label handle_right_edgecase
  push argument 0
  push argument 1
  call right_edgecase 2
  return

function right_edgecase 0
  push constant 15
  pop temp 1

  push argument 0 // wordidx
  call is_even 1
  if-goto handle_even_wordidx

  push argument 0
  push constant 1
  sub
  pop temp 0

  push constant 0
  return

  label handle_even_wordidx
  push argument 0
  push constant 1
  add
  pop temp 0

  push constant 0
  return

function up 0
  push argument 0
  push constant 30
  add
  push constant 31
  and
  pop temp 0

  push argument 1
  pop temp 1

  push constant 0
  return

function down 0
  push argument 0
  push constant 2
  add
  push constant 31
  and
  pop temp 0

  push argument 1
  pop temp 1

  push constant 0
  return


function live_neighbour_count 1
  push constant 2112
  pop pointer 0

  push argument 0
  push argument 1
  call neighbour_positions 2
  pop constant 0

  push constant 0
  pop local 0 // sum

  label start_loop
    push pointer 0
    push constant 2128
    eq
    if-goto end_loop

    push this 0
    push this 1
    call read_value 2
    if-goto add_to_sum
    goto skip_add_to_sum
    label add_to_sum
    push local 0
    push constant 1
    add
    pop local 0
    label skip_add_to_sum

    push pointer 0
    push constant 2
    add
    pop pointer 0
    goto start_loop
    label end_loop

  push local 0
  return

function neighbour_positions 0
  push constant 2112
  pop pointer 0

  push argument 0
  push argument 1
  call up 2
  pop constant 0
  push temp 0
  pop this 0
  push temp 1
  pop this 1

  push temp 0
  push temp 1
  call right 2
  pop constant 0
  push temp 0
  pop this 2
  push temp 1
  pop this 3

  push temp 0
  push temp 1
  call down 2
  pop constant 0
  push temp 0
  pop this 4
  push temp 1
  pop this 5

  push temp 0
  push temp 1
  call down 2
  pop constant 0
  push temp 0
  pop this 6
  push temp 1
  pop this 7

  push temp 0
  push temp 1
  call left 2
  pop constant 0
  push temp 0
  pop this 8
  push temp 1
  pop this 9

  push temp 0
  push temp 1
  call left 2
  pop constant 0
  push temp 0
  pop this 10
  push temp 1
  pop this 11

  push temp 0
  push temp 1
  call up 2
  pop constant 0
  push temp 0
  pop this 12
  push temp 1
  pop this 13

  push temp 0
  push temp 1
  call up 2
  pop constant 0
  push temp 0
  pop this 14
  push temp 1
  pop this 15

  push constant 0
  return
