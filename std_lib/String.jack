class String {
  field int buffer, length;

  constructor String new(int max_length) {
    let buffer = Memory.alloc(max_length);
    let length = 0;
    return this;
  }

  method void dispose() {
    do Memory.deAlloc(buffer);
    do Memory.deAlloc(this);
  }

  method char charAt(int j) {
    return buffer[j];
  }

  method int length() {
    return length;
  }

  method void setCharAt(int j, char c) {
    let buffer[j] = c;
  }

  method void appendChar(char c) {
    let buffer[length] = c;
    let length = length + 1;
  }

  method void eraseLastChar() {
    let length = length - 1;
  }

  method int intValue() {
    var int i, result, multiplier, digit;
    let multiplier = 1;
    while (i < length) {
      let digit = buffer[i];
      if (digit >= 48 & digit <= 57) {
        // it's in the ascii digit range
        let result = result + multiplier * (digit - 48);
      } else {
        return result;
      }
      let i = i + 1;
      let multiplier = multiplier * 10;
    }
    return result;
  }

  method void setInt(int j) {
    var int remainder, divided;

    let length = 0;
    while (j > 0) {
      let divided = j / 10;
      let remainder = j - divided * 10;
      let j = divided;
      do appendChar(remainder + 48);
    }
  }

  function char backSpace() {
    return 8;
  }

  function char doubleQuote() {
    return 34;
  }

  function char newLine() {
    return 10;
  }
}